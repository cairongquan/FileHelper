{"code":"import isBlob from './module/isBlob';\r\nimport isFile from './module/isFile';\r\nimport turnBlobToUrl from './module/turnBlobToUrl';\r\nimport isArrayBuffer from './module/isArrayBuffer';\r\nimport getSuffixType from './module/getSuffixType';\r\nvar stepArray = [blobToUrl, fileToUrl, arrayBufferToUrl];\r\nfunction blobToUrl(dataSource) {\r\n    if (isBlob(dataSource)) {\r\n        var url = turnBlobToUrl(dataSource);\r\n        return url;\r\n    }\r\n    throw Error;\r\n}\r\nfunction fileToUrl(dataSource) {\r\n    if (isFile(dataSource)) {\r\n        var blob = new Blob([dataSource], { type: dataSource.type });\r\n        return blobToUrl(blob);\r\n    }\r\n    throw Error;\r\n}\r\nfunction arrayBufferToUrl(dataSource, type) {\r\n    if (isArrayBuffer(dataSource)) {\r\n        var blob = new Blob([dataSource], { type: getSuffixType(type) || '' });\r\n        return blobToUrl(blob);\r\n    }\r\n    throw Error;\r\n}\r\nexport function fileHelper(option) {\r\n    console.log('target');\r\n    var url = '';\r\n    for (var i = 0; i < stepArray.length - 1; i++) {\r\n        try {\r\n            url = stepArray[i](option.of, option.suffix);\r\n            break;\r\n        }\r\n        catch (err) {\r\n            continue;\r\n        }\r\n    }\r\n    console.log(url, 111);\r\n    return url;\r\n}\r\n","references":["/Users/cairongquan/FileHelper/src/module/isBlob.ts","/Users/cairongquan/FileHelper/src/module/isFile.ts","/Users/cairongquan/FileHelper/src/module/turnBlobToUrl.ts","/Users/cairongquan/FileHelper/src/module/isArrayBuffer.ts","/Users/cairongquan/FileHelper/src/module/getSuffixType.ts","/Users/cairongquan/FileHelper/types/index.d.ts"]}
